# Generated by Django 5.1.3 on 2024-11-29 07:39

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Donation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('food_item_type', models.CharField(choices=[('raw_material', 'Raw Material'), ('restaurant_menu', 'Restaurant Menu'), ('packaged_food', 'Packaged Food')], help_text='Type of food item being donated', max_length=50)),
                ('food_item_id', models.PositiveIntegerField(help_text='ID of the donated food item')),
                ('food_item_name', models.CharField(help_text='Name of the donated food item', max_length=255)),
                ('quantity', models.FloatField(help_text='Quantity of the donated item (kg or units)')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='PackagedFood',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='packaged_food/images/')),
                ('price_per_unit', models.DecimalField(decimal_places=2, help_text='Price per unit', max_digits=10)),
                ('weight', models.FloatField(help_text='Weight in kilograms')),
                ('quantity', models.PositiveIntegerField(help_text='Number of items in stock')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expired_at', models.DateTimeField(blank=True, null=True)),
                ('is_wasted', models.BooleanField(default=False, help_text='Mark as wasted after expiration')),
            ],
        ),
        migrations.CreateModel(
            name='RawMaterial',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='raw_materials/images/')),
                ('temperature', models.FloatField(help_text='Temperature in °C')),
                ('humidity', models.FloatField(help_text='Humidity in %')),
                ('pH', models.FloatField(help_text='pH levels')),
                ('microbial_count', models.PositiveIntegerField(help_text='Microbial count in CFU/g')),
                ('weight', models.FloatField(help_text='Weight in kilograms')),
                ('packaging_type', models.CharField(blank=True, choices=[('vacuum_sealed', 'Vacuum Sealed'), ('air_tight', 'Air Tight')], max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expired_at', models.DateTimeField(blank=True, null=True)),
                ('is_wasted', models.BooleanField(default=False, help_text='Mark as wasted after expiration')),
            ],
        ),
        migrations.CreateModel(
            name='RestaurantMenu',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=255)),
                ('image', models.ImageField(blank=True, null=True, upload_to='restaurant_menu/images/')),
                ('temperature', models.FloatField(help_text='Ideal serving temperature in °C')),
                ('price_per_serving', models.DecimalField(decimal_places=2, help_text='Price per serving', max_digits=10)),
                ('serving_size', models.FloatField(help_text='Serving size in kilograms')),
                ('total_weight', models.FloatField(help_text='Total prepared weight in kilograms')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expired_at', models.DateTimeField(blank=True, null=True)),
                ('is_wasted', models.BooleanField(default=False, help_text='Mark as wasted after expiration')),
            ],
        ),
    ]
